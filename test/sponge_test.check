#include "sponge.h"

#include <stdio.h>
#include <string.h>

#include <check.h>

struct sponge_s {
    __m128i state[SPONGE_STATE_LENGTH_I128];
};

#test squeeze_IV
    // the output of the squeeze function on a just-initialized
    // sponge in Lyra2's reference SSE implementation.
    const uint8_t expected[] = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x08, 0xc9, 0xbc, 0xf3, 0x67, 0xe6, 0x09, 0x6a,
        0x3b, 0xa7, 0xca, 0x84, 0x85, 0xae, 0x67, 0xbb,
        0x2b, 0xf8, 0x94, 0xfe, 0x72, 0xf3, 0x6e, 0x3c,
        0xf1, 0x36, 0x1d, 0x5f, 0x3a, 0xf5, 0x4f, 0xa5,
        0x2d, 0x56, 0x47, 0x55, 0x66, 0x10, 0x9f, 0xe6,
        0x27, 0xaf, 0x2a, 0x6d, 0x2e, 0xe8, 0x66, 0xfe,
        0x68, 0x1c, 0x33, 0xac, 0x12, 0xbf, 0xa7, 0xe5,
        0x5a, 0x17, 0x6a, 0x4a, 0x05, 0xcf, 0xc2, 0x0c
    };

    uint8_t squeezed[sizeof(expected) / sizeof(uint8_t)] = {0};

    sponge_t *sponge = sponge_new();
    sponge_squeeze(sponge, squeezed, sizeof(squeezed), SPONGE_FLAG_EXTENDED_RATE);

    ck_assert(!memcmp(squeezed, expected, sizeof(expected) / sizeof(uint8_t)));
    sponge_destroy(sponge);
    return;

#test absorb_block_safe
    uint8_t data[SPONGE_RATE_SIZE_BYTES] = {
        0x4c, 0x79, 0x72, 0x61, 0x20, 0x73, 0x70, 0x6f,
        0x6e, 0x67, 0x65, 0x73, 0x61, 0x6c, 0x74, 0x73,
        0x61, 0x6c, 0x74, 0x73, 0x61, 0x6c, 0x74, 0x73,
        0x61, 0x6c, 0x74, 0x40, 0x00, 0x00, 0x00, 0x0b,
        0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0a,
        0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x40,
        0x00, 0x00, 0x00 /* ..........................
        ......... padding goes here ................ */
    };

    const uint8_t expected[SPONGE_STATE_SIZE_BYTES] = {
        0x80, 0xb5, 0x0d, 0xa6, 0xec, 0x68, 0xa4, 0xe2,
        0x47, 0xa0, 0x27, 0x59, 0x9c, 0xf3, 0x3f, 0x89,
        0xe0, 0x43, 0x76, 0xd2, 0xff, 0x08, 0xf1, 0x91,
        0xbb, 0x6d, 0x6f, 0x46, 0xe1, 0x23, 0xa5, 0xd8,
        0x0d, 0xb7, 0xc2, 0xc7, 0xb1, 0x38, 0x61, 0x30,
        0x14, 0x5f, 0x21, 0x80, 0xd8, 0x6b, 0x77, 0xba,
        0xc0, 0x8f, 0x7d, 0x52, 0x5f, 0x6e, 0x0e, 0x0f,
        0x16, 0xd5, 0x1e, 0x71, 0x63, 0xc0, 0x29, 0xe2,
        0x15, 0x7c, 0xc9, 0x68, 0x28, 0xd1, 0x3a, 0xaa,
        0x21, 0xef, 0x3e, 0xb7, 0x8f, 0x30, 0xbe, 0x36,
        0x50, 0xb6, 0x55, 0xb9, 0x2c, 0xd6, 0xaa, 0x02,
        0xc8, 0xf8, 0x36, 0xfd, 0x35, 0xcb, 0x6b, 0xe8,
        0x4e, 0x22, 0x78, 0x12, 0xda, 0x43, 0x91, 0x76,
        0x32, 0xf0, 0xf5, 0x1b, 0xeb, 0x89, 0xf3, 0x07,
        0xec, 0x1a, 0x98, 0xd8, 0xad, 0xc1, 0x41, 0xd4,
        0xb8, 0x12, 0x7a, 0x6d, 0x47, 0x7d, 0x4b, 0xfc
    };

    sponge_t *sponge = sponge_new();
    sponge_absorb(sponge, data, 51, 0);

    ck_assert(!memcmp(sponge->state, expected, SPONGE_STATE_SIZE_BYTES));
    sponge_destroy(sponge);
    return;
